{% include 'settings' %}
{% include 'set-product-vars' product_class:'product-detail', pricing: 'variant' %}

{% comment %}
  Additional variable settings can be found in the set-product-vars.liquid snippet
{% endcomment %}

{% comment %}
  Determine the sizes of the image and content columns
{% endcomment %}
{%- assign col_one_size_medium = 6 -%}
{%- assign col_two_size_medium = 6 -%}
{%- assign col_one_size_large = section.settings.col_one_size_large -%}
{%- assign col_two_size_large = 12 | minus: col_one_size_large -%}

{% if col_two_size_large == 0 %}
  {%- assign col_one_size_medium = 12 -%}
  {%- assign col_two_size_medium = 12 -%}
  {%- assign col_two_size_large = 12 -%}
{% endif %}

{% comment %}
  Hide the variant selector if the product has a single variant and the show single selector option has been set to false in the settings.liquid snippet
{% endcomment %}
{% if product.variants.size <= 1 and product_show_single_selector == false %}
  {%- assign product_show_multi_selectors = false -%}
{% endif %}

{% comment %}
  Hide the variant selector if set to hidden in the section settings
{% endcomment %}
{% if section.settings.show_variant_selectors == false %}
  {%- assign product_show_multi_selectors = false -%}
{% endif %}

{% comment %}
  Limit the number of variant selectors per row to the number of product options. The maximum number of selectors per row can be set in the settings.liquid snippet
{% endcomment %}
{% if product_selectors_per_row_small > product.options.size %}
  {%- assign product_selectors_per_row_small = product.options.size -%}
{% endif %}

{% if product_selectors_per_row_medium > product.options.size %}
  {%- assign product_selectors_per_row_medium = product.options.size -%}
{% endif %}

{% if product_selectors_per_row_large > product.options.size %}
  {%- assign product_selectors_per_row_large = product.options.size -%}
{% endif %}

{% if product.options.size == 1 %}
  {%- assign product_selectors_per_row_medium = 2 -%}
  {%- assign product_selectors_per_row_large = 2 -%}
{% endif %}

{% comment %}
  Determine the initial primary image to show
{% endcomment %}
{% if product_enable_select_an_option %}
  {%- assign primary_media = product.featured_media -%}
  {%- assign primary_image = product.featured_image -%}
{% else %}
  {%- assign primary_media = product.featured_media -%}
  {%- assign primary_image = variant.featured_image | default: product.featured_image -%}
{% endif %}

{% comment %}
  Enable/disable image zooming
{% endcomment %}
{% if section.settings.enable_image_zoom %}
  {%- assign primary_media_attributes = primary_media_attributes | append: ' is-zoomable' -%}
{% endif %}

{% comment %}
  Enable/disable video looping
{% endcomment %}
{% if section.settings.enable_video_looping %}
  {%- assign primary_media_attributes = primary_media_attributes | append: ' data-loop="true"' -%}
{% endif %}

{% render 'section-open', section: section, type: 'product-template', title: false %}

{% comment %}
  Section
{% endcomment %}
{%- render 'separator' section_type: 'product-template', show_title: false %}

<article id="{{ product.handle }}" class="{{ product_class }}" data-section-id="{{ section.id }}" data-section-type="product" data-enable-history-state="true">

  <div class="row">

    {% comment %}
      Left column
    {% endcomment %}
    <div class="medium-{{ col_one_size_medium }} large-{{ col_one_size_large }} columns">

      <div class="primary-media-types" {{ primary_media_attributes }}>
        {% assign videos = 0 %}
        {% assign external_videos = 0 %}
        {% assign models = 0 %}
        {% for media in product.media %}
          {% capture id %}media-{{ media.id }}{% endcapture %}
          {% case media.media_type %}
            {% when 'image' %}
              {% assign image_link_url = media | img_url: 'master' %}
              {% include 'image' with media, image_id: id, image_class: 'primary-media', image_type: 'product-primary', image_link_url: image_link_url %}
            {% when 'video' %}
            {% assign videos = videos | plus: 1 %}
              <div class="video-container primary-media-container" tabindex="0" data-media-id="{{ media.id }}">
                {{ media | video_tag: controls: true, id: id, class: 'primary-media js-player', data-media-id: media.id }}
              </div>
            {% when 'external_video' %}
            {% assign external_videos = external_videos | plus: 1 %}
              <div class="external-video-container primary-media-container" tabindex="0" data-media-id="{{ media.id }}">
                <div class="plyr__video-embed">
                  {{ media | external_video_tag: id: id, class: 'primary-media yt-player', data-media-id: media.id }}
                </div>
              </div>
            {% when 'model' %}
            {% assign models = models | plus: 1 %}
              <div class="model-container primary-media-container" tabindex="0" data-media-id="{{ media.id }}">
                <div class="model-container-position" style="padding-top: 100%;">
                  {{ media | model_viewer_tag: id: id, class: 'primary-media xr-viewer', reveal: 'interaction', toggleable: true }}
                </div>
              </div>
            {% else %}
              <div class="media-container primary-media-container" tabindex="0" data-media-id="{{ media.id }}">
                <div class="media-container-position" style="padding-top: 100%;">
                  {{ media | media_tag: class: 'primary-media' }}
                </div>
              </div>
          {% endcase %}
        {% endfor %}
        {% assign first_model = product.media | where: 'media_type', 'model' | first %}
        {% if first_model %}
          <button
            class="button view-in-your-space"
            aria-label="{{ 'products.view_in_your_space' | t }}"
            data-shopify-xr
            data-shopify-model3d-id="{{ first_model.id }}"
            data-shopify-title="{{ product.title }}"
            style="display: none;">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 60 60" width="40" height="40">
              <path d="M40.4,22.57l-8.8-5.14a3.19,3.19,0,0,0-3.21,0l-8.8,5.14A3.24,3.24,0,0,0,18,25.36V35.64a3.23,3.23,0,0,0,1.6,2.79l8.8,5.14a3.2,3.2,0,0,0,3.21,0l8.8-5.14A3.23,3.23,0,0,0,42,35.64V25.36A3.24,3.24,0,0,0,40.4,22.57ZM20.6,36.7a1.23,1.23,0,0,1-.6-1.06V25.36a1.23,1.23,0,0,1,.6-1.06l8.8-5.14a1.19,1.19,0,0,1,1.19,0l8.8,5.14a1.2,1.2,0,0,1,.36.34l-9.51,4.89a2.23,2.23,0,0,0-1.25,2V41.6Z"/>
            </svg>
            <span>{{ 'products.view_in_your_space' | t }}</span>
          </button>
        {% endif %}
      </div>

      {% comment %}
        Separator
      {% endcomment %}
      {% include 'separator' class:'margin-top-50 margin-bottom-50' %}

      {% if product.media.size > 1 %}
        <div class="secondary-media-types">
          <div class="small-item-grid-{{ product_thumbnails_per_row_small }} medium-item-grid-{{ product_thumbnails_per_row_medium }} large-item-grid-{{ product_thumbnails_per_row_large }} row-spacing-50">
            {% for media in product.media %}
              <div class="item">
                {% if media.media_type == 'image' %}
                  {% assign image_link_url = media | img_url: 'master' %}
                {% else %}
                  {% assign image_link_url = product.url %}
                {% endif %}
                {% include 'image' with media, image_class: 'secondary-media', image_type: 'product-secondary', image_link_url: image_link_url %}
                {% case media.media_type %}
                  {% when 'video' or 'external_video' %}
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 26 26" width="26" height="26" fill="none">
                      <path d="M1 25H25V1H1V25Z" fill="white" fill-rule="evenodd" clip-rule="evenodd"/>
                      <path d="M0.5 25V25.5H1H25H25.5V25V1V0.5H25H1H0.5V1V25Z" stroke="black" stroke-linecap="round" stroke-opacity="0.05"/>
                      <path d="M9.71814 6.71984C9.0517 6.31605 8.19995 6.79588 8.19995 7.5751V18.311C8.19995 19.1138 9.09826 19.5893 9.76217 19.1379L18.1123 13.4612C18.7146 13.0518 18.6912 12.1564 18.0682 11.779L9.71814 6.71984Z" fill="#3A3A3A" fill-opacity="0.6" fill-rule="evenodd" clip-rule="evenodd"/>
                    </svg>
                  {% when 'model' %}
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 26 26" width="26" height="26" fill="none">
                      <path d="M1,25H25V1H1Z" fill="#fff"/>
                      <path d="M.5,25v.5h25V.5H.5Z" fill="none" stroke="#000" stroke-linecap="round" stroke-opacity="0.05"/>
                      <path d="M19.13,8.28,14,5.32a2,2,0,0,0-2,0l-5.12,3a2,2,0,0,0-1,1.76V16a2,2,0,0,0,1,1.76l5.12,3a2,2,0,0,0,2,0l5.12-3a2,2,0,0,0,1-1.76V10A2,2,0,0,0,19.13,8.28Zm-6.4,11.1-5.12-3A.53.53,0,0,1,7.35,16V10a.53.53,0,0,1,.27-.46l5.12-3a.53.53,0,0,1,.53,0l5.12,3-4.72,2.68a1.33,1.33,0,0,0-.67,1.2v6a.53.53,0,0,1-.26,0Z" fill="#3a3a3a" opacity="0.6" style="isolation:isolate"/>
                    </svg>
                {% endcase %}
              </div>
            {% endfor %}
          </div>
        </div>
      {% endif %}

    </div>

    {% comment %}
      Right column
    {% endcomment %}
    <div class="medium-{{ col_two_size_medium }} large-{{ col_two_size_large }} columns">

      {% comment %}
        Separator
      {% endcomment %}
      {% if col_two_size_medium == 12 %}
        {% render 'separator', class: 'margin-top-150 no-margin-bottom' %}
      {% else %}
        {% render 'separator', class: 'margin-top-150 no-margin-bottom show-for-small' %}
      {% endif %}


      {% comment %}
        Header
      {% endcomment %}
      {% include 'page-header' class:'no-margin-bottom', title: product.title %}
      
      <h2 class="vendor">
      {% if product.collections[1].title != blank %}
        {{ product.collections[1].title | append: ' by ' | append: shop.name | link_to: product.collections[1].url }}
      {% elsif product.collections[0].title != blank %}
        {{ product.collections[0].title | append: ' by ' | append: shop.name | link_to: product.collections[0].url }}
      {% endif %}
      </h2>
      
      {% comment %}
        Vendor
      {% endcomment %}
      {% if section.settings.show_vendor %}
        <div class="vendor">
          {{ product.vendor | link_to_vendor }}
        </div>
      {% endif %}

      {% comment %}
        Separator
      {% endcomment %}
      {% include 'separator' class:'no-margin-top margin-bottom-50' %}
<span class="stamped-product-reviews-badge stamped-main-badge" data-id="{{ product.id }}" data-product-sku="{{ product.handle }}" data-product-type="{{product.type}}" data-product-title="{{product.title}}" style="display: inline-block;">{{ product.metafields.stamped.badge }}</span>
      {% comment %}
        Sale sticker
      {% endcomment %}
      {% if section.settings.show_sale_sticker %}
      <span class="{{ sale_sticker_class }}">{{ 'products.on_sale_sticker' | t }}</span>
      {% endif %}

      {% comment %}
        Pricing
      {% endcomment %}
      {% if section.settings.show_price %}
        {% include 'pricing' %}
      {% endif %}

      {% comment %}
        Separator
      {% endcomment %}
      {% include 'separator' class:'margin-top-50 no-margin-bottom' %}

      {% comment %}
        Variants
      {% endcomment %}
      <div class="variants">
        <div data-section="{{ section.id }}">
          {% form 'product', product %}

          {% comment %}
            Default to current variant  ID
          {% endcomment %}
          <input type="hidden" name="id" value="{{ variant.id }}">

          <div class="small-item-grid-{{ product_selectors_per_row_small }} medium-item-grid-{{ product_selectors_per_row_medium }} large-item-grid-{{ product_selectors_per_row_large }} row-spacing-50">

            {% comment %}
              Variant selectors
            {% endcomment %}
            {% if product_show_multi_selectors %}
              {% for option in product.options_with_values %}
                <div class="item">
                  <label for="option-select-{{ option.name | handleize }}">{{ option.name }}</label>
                  <select class="option-selector" id="option-select-{{ option.name | handleize }}" data-option-selector data-option-number="{{ forloop.index }}" data-select-text="{{ 'products.select_an_option' | t: option_name: option.name }}">
                    {% for value in option.values %}
                      {% if value == 'Default Title' %}
                        {%- assign display_value = product.title -%}
                      {% else %}
                        {%- assign display_value = value -%}
                      {% endif %}
                      <option {% if option.selected_value == value %}selected{% endif %} data-id="{{ value | handleize }}">{{ display_value }}</option>
                    {% endfor %}
                  </select>
                </div>
              {% endfor %}
            {% endif %}

            {% comment %}
              Line item properties

              Note: This theme includes built-in support for Shopify's line item properties (more information at https://help.shopify.com/themes/customization/products/get-customization-information-for-products). To use a custom line item property simply uncomment the code below and adjust to suit your needs.
            {% endcomment %}

            {% comment %}
              <!-- Monogram -->
              <div class="item">
                <label for="monogram">Monogram</label>
                <input type="text" id="monogram" name="properties[Monogram]" />
              </div>
            {% endcomment %}

            {% comment %}
              <!-- File Upload -->
              <div class="item">
                <label for="file">File</label>
                <input type="file" id="file" name="properties[File]" />
              </div>
            {% endcomment %}

            {% comment %}
              Quantity
            {% endcomment %}
            {% if section.settings.show_qty_selector %}
              <div class="item">
                <label for="quantity">{{ 'products.quantity_label' | t }}</label>
                <input id="quantity" class="quantity" name="quantity" type="number" min="1" value="1">
              </div>
            {% endif %}

          </div>

          {% comment %}
            Separator
          {% endcomment %}
          {% include 'separator' class:'margin-top-50 margin-bottom-50' %}

          <div class="small-item-grid-1 medium-item-grid-2 row-spacing-50">

            {% comment %}
              Add to cart / sold out button
            {% endcomment %}
            {% if section.settings.show_add_to_cart_button %}
              <div class="item">
                {% if variant.available %}
                  <button class="{{ add_to_cart_button_class }}" type="submit" data-cart-action="{{ settings.cart_type }}">{{ 'products.add_to_cart' | t }}</button>
                {% else %}
                  <button class="{{ add_to_cart_button_class }} disabled" type="submit" disabled>{{ 'products.sold_out' | t }}</button>
                {% endif %}
              </div>
            {% endif %}

            {% comment %}
              Smart payment button
            {% endcomment %}
            {% if section.settings.enable_payment_button %}
              <div class="item {{ smart_payment_button_container_class }}">
                {{ form | payment_button }}
              </div>
            {% endif %}

          </div>

          {% endform %}
        </div>

        <p class="visually-hidden" data-product-status
            aria-live="polite"
            role="status"
          ></p>
      </div>

      {% comment %}
        Backorder notice
      {% endcomment %}
      {% if section.settings.enable_backorder_notice %}
        <div class="{{ backorder_class }}">
          {% include 'separator' class:'lined full margin-top margin-bottom' %}
          <div class="table">
            <div class="cell">
              <i class="fa fa-2x fa-warning"></i>
            </div>
            <div class="cell">
              <span class="text">{{ 'products.backorder_html' | t }}</span>
            </div>
          </div>
          {% include 'separator' class:'lined full margin-top no-margin-bottom' %}
        </div>
      {% endif %}

      {% comment %}
        Separator
      {% endcomment %}
      {% include 'separator' class:'margin-top-50 margin-bottom-50' %}

      {% comment %}
        Description
      {% endcomment %}
      <div class="description">
        {{ product.description }}
      </div>

      {% comment %}
        Separator
      {% endcomment %}
      {% include 'separator' class:'margin-top-50 no-margin-bottom' %}

      {% comment %}
        Quantity available
      {% endcomment %}
      {% if section.settings.show_qty_available %}
        <span class="quantity-available text-light"><span class="quantity-available-label">{{ 'products.quantity_available' | t }}</span> <span data-quantity-available>{{ variant.inventory_quantity }}</span></span>
      {% endif %}

      {% comment %}
        SKU
      {% endcomment %}
      {% if section.settings.show_sku and variant.sku != blank %}
        <span class="sku text-light"><span class="sku-label">{{ 'products.sku' | t }}</span> <span data-sku>{{ variant.sku }}</span></span>
      {% endif %}

      {% comment %}
        Separator
      {% endcomment %}
      {% include 'separator' %}

      {% comment %}
        Tags
      {% endcomment %}
      {% if section.settings.show_tags and product.tags.size > 0 %}
        <div class="tags">
        {% for tag in product.tags %}
          <span>{{tag}}</span>
          {%- comment -%}{{ tag | replace: ' ', '&nbsp;' | link_to_tag: tag }}{%- endcomment -%}
        {% endfor %}
        </div>
      {% endif %}

      {% comment %}
        Separator
      {% endcomment %}
      {% include 'separator' %}

      {% comment %}
        Sharing
      {% endcomment %}
      {% include 'social-media-buttons' %}

    </div>

  </div>

  {% comment %}
    JSON-LD structured data
  {% endcomment %}
  {% include 'json-ld-product' %}

</article>

{% if external_videos > 0 %}
  <script>if(!document.getElementById("youtube-player-api")){var script=document.createElement("script");script.id="youtube-player-api",script.src="https://www.youtube.com/player_api",document.head.appendChild(script)}</script>
{% endif %}

{% include 'section-close' %}


{% comment %}
  Sticky Cart
{% endcomment %}
{% if section.settings.enable_sticky_cart_mobile or section.settings.enable_sticky_cart_desktop %}

  <div id="sticky-cart" class="sticky-cart {{ section.settings.sticky_cart_position }}{% if section.settings.enable_sticky_cart_mobile %} mobile{% endif %}{% if section.settings.enable_sticky_cart_desktop %} desktop{% endif %}">
    <div class="sticky-cart-content{% if product.has_only_default_variant %} default{% endif %}">

      <div class="sticky-cart-product-data">
        <h6>{{ product.title }}</h6>
        {% if section.settings.show_price %}
        {% include 'pricing' %}
        {% endif %}
      </div>

      {% unless product.has_only_default_variant %}
        {% if section.settings.enable_sticky_cart_mobile %}
          {% if section.settings.show_add_to_cart_button %}
            <div class="sticky-cart-action">
              {% if variant.available %}
                <button class="{{ add_to_cart_button_class }}" type="button">
                  {{ 'products.add_to_cart' | t }}
                </button>
              {% else %}
                <button class="{{ add_to_cart_button_class }} disabled" type="button" disabled>
                  {{ 'products.sold_out' | t }}
                </button>
              {% endif %}
            </div>
          {% endif %}
        {% endif %}
      {% endunless %}

      {% form 'product', product %}
        <input type="hidden" name="id" value="{{ variant.id }}">
        {% if product_show_multi_selectors %}
          {% for option in product.options_with_values %}
            <select class="sticky-cart-option-selector" id="sticky-cart-option-select-{{ option.name | handle }}" data-option-number="{{ forloop.index }}" data-select-text="{{ 'products.select_an_option' | t: option_name: option.name }}">
              {% for value in option.values %}
                {% if value == 'Default Title' %}
                  {%- assign display_value = product.title -%}
                {% else %}
                  {%- assign display_value = value -%}
                {% endif %}
                <option {% if option.selected_value == value %}selected{% endif %} data-id="{{ value | handle }}">{{ display_value }}</option>
              {% endfor %}
            </select>
          {% endfor %}
        {% endif %}
        {% if section.settings.show_qty_selector %}
          <input id="sticky-cart-quantity" class="quantity" name="quantity" type="number" min="1" value="1">
        {% endif %}
        {% if section.settings.show_add_to_cart_button %}
          {% if variant.available %}
            <button class="{{ add_to_cart_button_class }}" type="submit" data-cart-action="{{ settings.cart_type }}">
              {{ 'products.add_to_cart' | t }}
            </button>
          {% else %}
            <button class="{{ add_to_cart_button_class }} disabled" type="submit" disabled>
              {{ 'products.sold_out' | t }}
            </button>
          {% endif %}
        {% endif %}
      {% endform %}

    </div>
  </div>

  <script>
    (function ($) {
      jQuery(document).ready(function($) {
        var $header = $('#app-header');
        var $upperHeader = $('#app-upper-header');
        var $lowerHeader = $('#app-lower-header');
        var $stickyCart = $('#sticky-cart');
        var $action = $('.sticky-cart-action .add-to-cart', $stickyCart);
        var $productForm = $('#product_form_' + {{ product.id }});
        var offset = 0{% if section.settings.sticky_cart_position == 'top' %} - $stickyCart.outerHeight(){% endif %};
        var stickyHeaderOn = $header.hasClass('sticky-on');

        if (stickyHeaderOn) {
          offset = offset{% if section.settings.sticky_cart_position == 'bottom' %} - $upperHeader.outerHeight(){% endif %};
        };

        $action.click(function () {
          $('html, body').animate({
            scrollTop: $productForm.offset().top + offset
          }, 600);
          if (stickyHeaderOn) {
            setTimeout(function () {
              $lowerHeader.addClass('idle');
            }, 609);
          };
        });
      });
    }(jQuery.noConflict()))
  </script>

{% endif %}


{% comment %}
  Prevent inventory quantites from being exposed unnecessarily
{% endcomment %}
<script type="text/javascript">
  {% if section.settings.show_qty_available %}
    {% for variant in product.variants %}
      Station.Theme.current.product.variants['{{ forloop.index0 }}']['inventory_policy'] = '{{ variant.inventory_policy }}';
      Station.Theme.current.product.variants['{{ forloop.index0 }}']['inventory_quantity'] = {{ variant.inventory_quantity }};
    {% endfor %}
  {% endif %}
</script>

<script>
  function setupShopifyXr() {
    if (! window.ShopifyXR) {
      document.addEventListener('shopify_xr_initialized', function() {
        setupShopifyXr();
      });
    } else {
      {% assign models = product.media | where: 'media_type', 'model' | json %}
      window.ShopifyXR.addModels({{ models }});
      window.ShopifyXR.setupXRElements();
    }
  }

  window.Shopify.loadFeatures([{
    name: 'shopify-xr',
    version: '1.0',
    onLoad: setupShopifyXr
  }]);

  window.ShopifyXR = window.ShopifyXR || function () {
    (ShopifyXR.q = ShopifyXR.q || []).push(arguments)
  };
  {% assign models = product.media | where: 'media_type', 'model' | json %}
  ShopifyXR('addModels', {{ models }});
</script>

{% comment %}
  Schema
{% endcomment %}
{% schema %}
{
  "name": "Product pages",
  "class": "shopify-section-product-template",
  "settings": [
    {
      "type": "checkbox",
      "id": "show_vendor",
      "label": "Show vendor"
    },
    {
      "type": "checkbox",
      "id": "show_price",
      "label": "Show price"
    },
    {
      "type": "checkbox",
      "id": "show_compare_at_price",
      "label": "Show compare at price"
    },
    {
      "type": "checkbox",
      "id": "show_variant_selectors",
      "label": "Show variant selectors"
    },
    {
      "type": "checkbox",
      "id": "show_qty_selector",
      "label": "Show quantity selector"
    },
    {
      "type": "checkbox",
      "id": "show_qty_available",
      "label": "Show quantity available"
    },
    {
      "type": "checkbox",
      "id": "show_add_to_cart_button",
      "label": "Show add to cart button"
    },
    {
      "type": "checkbox",
      "id": "enable_payment_button",
      "label": "Show dynamic checkout button",
      "info": "Lets customers check out directly using a familiar payment method. [Learn more](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_sku",
      "label": "Show SKU"
    },
    {
      "type": "checkbox",
      "id": "show_tags",
      "label": "Show tags"
    },
    {
      "type": "checkbox",
      "id": "show_social_sharing_buttons",
      "label": "Show social sharing buttons"
    },
    {
      "type": "checkbox",
      "id": "show_sale_sticker",
      "label": "Show sale sticker",
      "info": "Shown when product has 'compare at' price higher than 'price'"
    },
    {
      "type": "checkbox",
      "id": "enable_backorder_notice",
      "label": "Enable backorder notice"
    },
    {
      "type": "header",
      "content": "MEDIA",
      "info": "Learn more about [media types](https://help.shopify.com/en/manual/products/product-media)."
    },
    {
      "id": "col_one_size_large",
      "type": "select",
      "label": "Main media size",
      "options": [
        {"value": "3", "label": "Small"},
        {"value": "6", "label": "Medium"},
        {"value": "9", "label": "Large"},
        {"value": "12", "label": "Full-width"}
      ],
      "default": "6"
    },
    {
      "type": "checkbox",
      "id": "enable_image_zoom",
      "label": "Enable image zoom",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "enable_video_looping",
      "label": "Enable video looping",
      "default": true
    },
    {
      "type": "header",
      "content": "STICKY CART",
      "info": "Let customers add products to cart more easily (the Show add to cart button option must be checked)."
    },
    {
      "type": "checkbox",
      "id": "enable_sticky_cart_mobile",
      "label": "Enable sticky cart on mobile"
    },
    {
      "type": "checkbox",
      "id": "enable_sticky_cart_desktop",
      "label": "Enable sticky cart on desktop"
    },
    {
      "type": "radio",
      "options": [
         { "value": "top", "label": "Top"},
         { "value": "bottom", "label": "Bottom"}
      ],
      "id": "sticky_cart_position",
      "label": "Sticky cart position"
    }
  ]
}
{% endschema %}
